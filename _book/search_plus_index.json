{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction -N0zoM1z0- All Right ReservedLast Modified Time: 2024-07-23 19:16:28 "},"GitBook/":{"url":"GitBook/","title":"GitBook","keywords":"","body":"Record how to build a Gitbook and so on. -N0zoM1z0- All Right ReservedLast Modified Time: 2024-07-23 20:19:59 "},"GitBook/GitBook部署.html":{"url":"GitBook/GitBook部署.html","title":"GitBook部署","keywords":"","body":"GitBook部署 记录下GitBook的部署方法 我采用的是Linux来部署，因为Windows下的安装配环境变量等过于麻烦，而且gitbook的配置需要特定版本的nodejs，所以采用Linux来部署。 使用nvm安装Node.js和npm 1.安装npm curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash 然后，添加nvm到你的shell配置文件中（例如.bashrc，.zshrc等）。 export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm 使配置文件生效： source ~/.bashrc 2.安装node.js（推荐10.24.1版本） nvm install 10.24.1 安装GitBook CLI 现在，你可以使用npm安装GitBook CLI： npm install -g gitbook-cli 然后建一个GitBook文件夹， gitbook init 即可开始安装，注意开梯子，下载需要几分钟。 生成部署 在项目根目录下 生成: gitbook build 部署: gitbook serve 访问http://localhost:4000即可 -N0zoM1z0- All Right ReservedLast Modified Time: 2024-07-23 19:31:00 "},"GitBook/GitBook美化.html":{"url":"GitBook/GitBook美化.html","title":"GitBook美化","keywords":"","body":"GitBook美化 相比较github.io的博客形式，我觉得这种book形式的更加好看。 安装一些实用的插件。 插件安装方法 在book的根目录下建一个book.json文件，按着配置，这里以GitBook安装及使用——使用 Markdown 创建你自己的博客网站和电子书_gitbook搭建-CSDN博客上面给的book.json为例，也是我的初始化book.json配置。 { \"language\" : \"zh-hans\", \"structure\": { \"readme\": \"README.md\" }, \"plugins\": [ \"-lunr\", \"-sharing\", \"-search\", \"search-pro\", \"sidebar-style\", \"code\", \"splitter\", \"expandable-chapters\", \"anchor-navigation-ex\", \"-highlight\", \"prism\", \"popup\" ], \"pluginsConfig\": { \"sidebar-style\": { \"title\": \"4_Sec\", \"author\": \"N0zoM1z0\" } } } 整体效果还是蛮好看的， 继续安装插件/美化 给几个参考文章： Gitbook详解（五）-插件的配置和使用详解 - 简书 (jianshu.com) plugin - gitbook常用的插件 - 个人文章 - SegmentFault 思否 gitbook部署网站 · sqlfans 对一些实用的美化插件用法作个记录： alerts 漂亮格式的提示块 { \"plugins\": [\"alerts\"] } 目前支持 4 种提示的类型：info，warning，danger，success Info styling > **[info] For info** > > Use this for infomation messages. Warning styling > **[warning] For warning** > > Use this for warning messages. Danger styling > **[danger] For danger** > > Use this for danger messages. Success styling > **[success] For info** > > Use this for success messages. 分别展示如下。 info [info] For info Use this for infomation messages. Warning [warning] For warning Use this for warning messages. Danger [danger] For danger Use this for danger messages. Success [success] For info Use this for success messages. 效果还是不错的。 lightbox 点击图片弹窗显示 这个也是必须的优化插件了。 { \"plugins\": [ \"lightbox\" ], \"lightbox\": { \"includeJQuery\": false, \"sameUuid\": true, \"options\": { \"resizeDuration\": 500, \"wrapAround\": false } } } 那么就需要把前面book.json的popup插件去掉，不然两者冲突了。（一个弹窗显示，一个在新页面显示） 但是，貌似这个版本的gitbook安装lightbox有问题。（已解决） [warning] 错误安装方式 gitbook install [success] 正确安装方式 Almighty GPT4~ # 全局安装插件 npm install -g gitbook-plugin-lightbox@1.2.0 # 在项目中安装插件 npm install gitbook-plugin-lightbox@1.2.0 效果： hide-element 隐藏元素 可以隐藏不想看到的元素，比如导航栏中 Published by GitBook 。 { \"plugins\": [ \"hide-element\" ], \"pluginsConfig\": { \"hide-element\": { \"elements\": [\".gitbook-link\"] } } } prism 代码高亮美化 直接看official document吧 https://github.com/gaearon/gitbook-plugin-prism?tab=readme-ov-file 测试代码段： #include int main(){ char *A = malloc(0x10); free(A); if(0){;} return 0; } import os print(os.popen(\"whoami\").read()) gcc -m32 -g test.c -o test 比较喜欢这一款：prismjs/themes/prism-tomorrow.css favicon 修改网站的favicon.ico { \"plugins\": [\"favicon\"], \"pluginsConfig\": { \"favicon\": { \"shortcut\": \"asset/img/favicon.ico\", \"bookmark\": \"asset/img/favicon.ico\", \"appleTouch\": \"asset/img/favicon.ico\", \"appleTouchMore\": { \"120x120\": \"asset/img/favicon.ico\", \"180x180\": \"asset/img/favicon.ico\" } } } } 注意： 图标的格式一定要是.ico的，直接修改图片的后缀为.ico是无效的。 图标的分辨率要是32*32的。 可在线把图片转成图标：http://www.bitbug.net/ tbfed-pagefooter 添加页面显示最后更新时间 也是有必要的一个插件。 { \"plugins\": [ \"tbfed-pagefooter\" ], \"pluginsConfig\": { \"tbfed-pagefooter\": { \"copyright\":\"\", \"modify_label\": \"该文件最后修改时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, } } -N0zoM1z0- All Right ReservedLast Modified Time: 2024-07-23 21:38:53 "}}